AWSTemplateFormatVersion: '2010-09-09'
Description: Pipeline using CodePipeline and CodeBuild for continuous delivery of a single-page application to S3
Parameters:
  RootDomainName:
    Type: String
    Description: Domain name for your website (example.com)
    Default: "ethanbergstrom.com"
  TTL:
    Type: String
    Description: Domain TTL
    Default: 600
  GitHubUser:
    Type: String
    Description: GitHub User
    Default: "ethanbergstrom"
  GitHubRepo:
    Type: String
    Description: Site GitHub Repo to pull from. Only the Name. not the URL
    Default: "website"
  GitHubBranch:
    Type: String
    Description: Site GitHub Branch
    Default: "master"
  GitHubToken:
    NoEcho: true
    Type: String
    Description: Secret. It might look something like 9b189a1654643522561f7b3ebd44a1531a4287af OAuthToken with access to Repo. Go to https://github.com/settings/tokens
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Site Configuration"
        Parameters:
          - RootDomainName
          - TTL
      - Label:
          default: "GitHub Configuration"
        Parameters:
          - GitHubToken
          - GitHubUser
          - GitHubRepo
          - GitHubBranch
    ParameterLabels:
      RootDomainName:
        default: Domain name for your website (example.com)
      TTL:
        default: Domain TTL
      GitHubToken:
        default: GitHub OAuth2 Token
      GitHubUser:
        default: GitHub User/Org Name
      GitHubRepo:
        default: Site GitHub Repository Name
      GitHubBranch:
        default: Site GitHub Branch Name
Mappings:
  RegionMap:
    us-east-1:
      S3hostedzoneID: Z3AQBSTGFYJSTF
      websiteendpoint: s3-website-us-east-1.amazonaws.com
    us-west-1:
      S3hostedzoneID: Z2F56UZL2M1ACD
      websiteendpoint: s3-website-us-west-1.amazonaws.com
    us-west-2:
      S3hostedzoneID: Z3BJ6K6RIION7M
      websiteendpoint: s3-website-us-west-2.amazonaws.com
    eu-west-1:
      S3hostedzoneID: Z1BKCTXD74EZPE
      websiteendpoint: s3-website-eu-west-1.amazonaws.com
    ap-southeast-1:
      S3hostedzoneID: Z3O0J2DXBE1FTB
      websiteendpoint: s3-website-ap-southeast-1.amazonaws.com
    ap-southeast-2:
      S3hostedzoneID: Z1WCIGYICN2BYD
      websiteendpoint: s3-website-ap-southeast-2.amazonaws.com
    ap-northeast-1:
      S3hostedzoneID: Z2M4EHUR26P7ZW
      websiteendpoint: s3-website-ap-northeast-1.amazonaws.com
    sa-east-1:
      S3hostedzoneID: Z31GFT0UA1I2HV
      websiteendpoint: s3-website-sa-east-1.amazonaws.com
Resources:
# Site Resources
  SiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref RootDomainName
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: 404.html
  WWWBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub www.${RootDomainName}
      AccessControl: BucketOwnerFullControl
      WebsiteConfiguration:
        RedirectAllRequestsTo:
          HostName: !Ref SiteBucket
# DNS Resources
  DNSZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: !Ref RootDomainName
  ApexRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref RootDomainName
      HostedZoneId: !Ref DNSZone
      Type: A
      Comment: Zone apex
      AliasTarget:
        DNSName: !FindInMap [ RegionMap, !Ref 'AWS::Region', websiteendpoint]
        HostedZoneId: !FindInMap [ RegionMap, !Ref 'AWS::Region', S3hostedzoneID]
  WWWRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Sub "www.${RootDomainName}"
      HostedZoneId: !Ref DNSZone
      Type: CNAME
      TTL: !Ref TTL
      ResourceRecords:
      - !GetAtt WWWBucket.DomainName
# Pipeline Resources
  PipelineBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - codepipeline.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: codepipeline-service
        PolicyDocument:
          Statement:
          - Action:
            - codebuild:*
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:GetObject
            - s3:GetObjectVersion
            - s3:GetBucketVersioning
            Resource: "*"
            Effect: Allow
          - Action:
            - s3:PutObject
            Resource:
            - arn:aws:s3:::codepipeline*
            Effect: Allow
          - Action:
            - s3:*
            - cloudformation:*
            - iam:PassRole
            Resource: "*"
            Effect: Allow
          Version: '2012-10-17'
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineBucket
      Stages:
      - Name: Source
        Actions:
        - Name: SiteSource
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Version: '1'
            Provider: GitHub
          Configuration:
            Owner: !Ref GitHubUser
            Repo: !Ref GitHubRepo
            Branch: !Ref GitHubBranch
            OAuthToken: !Ref GitHubToken
          OutputArtifacts:
          - Name: SourceOutput
      - Name: Deploy
        Actions:
        - Name: SiteArtifact
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: '1'
            Provider: S3
          Configuration:
            BucketName: !Ref SiteBucket
            Extract: true
            CannedACL: public-read
          InputArtifacts:
          - Name: SourceOutput
Outputs:
  PipelineUrl:
    Value: !Sub https://console.aws.amazon.com/codepipeline/home?region=${AWS::Region}#/view/${Pipeline}
    Description: CodePipeline URL
  SiteUrl:
    Value: !GetAtt [SiteBucket, WebsiteURL]
    Description: S3 Website URL
